"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ledgerhq";
exports.ids = ["vendor-chunks/@ledgerhq"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/lib-es/hid-framing.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\n\nconst Tag = 0x05;\nfunction asUInt16BE(value) {\n    const b = Buffer.alloc(2);\n    b.writeUInt16BE(value, 0);\n    return b;\n}\nconst initialAcc = {\n    data: Buffer.alloc(0),\n    dataLength: 0,\n    sequence: 0,\n};\n/**\n * Object to handle HID frames (encoding and decoding)\n *\n * @param channel\n * @param packetSize The HID protocol packet size in bytes (usually 64)\n */\nconst createHIDframing = (channel, packetSize) => {\n    return {\n        /**\n         * Frames/encodes an APDU message into HID USB packets/frames\n         *\n         * @param apdu The APDU message to send, in a Buffer containing [cla, ins, p1, p2, data length, data(if not empty)]\n         * @returns an array of HID USB frames ready to be sent\n         */\n        makeBlocks(apdu) {\n            // Encodes the APDU length in 2 bytes before the APDU itself.\n            // The length is measured as the number of bytes.\n            // As the size of the APDU `data` should have been added in 1 byte just before `data`,\n            // the minimum size of an APDU is 5 bytes.\n            let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n            const blockSize = packetSize - 5;\n            const nbBlocks = Math.ceil(data.length / blockSize);\n            // Fills data with 0-padding\n            data = Buffer.concat([data, Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)]);\n            const blocks = [];\n            for (let i = 0; i < nbBlocks; i++) {\n                const head = Buffer.alloc(5);\n                head.writeUInt16BE(channel, 0);\n                head.writeUInt8(Tag, 2);\n                head.writeUInt16BE(i, 3);\n                // `slice` and not `subarray`: this might not be a Node Buffer, but probably only a Uint8Array\n                const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n                blocks.push(Buffer.concat([head, chunk]));\n            }\n            return blocks;\n        },\n        /**\n         * Reduces HID USB packets/frames to one response.\n         *\n         * @param acc The value resulting from (accumulating) the previous call of reduceResponse.\n         *   On first call initialized to `initialAcc`. The accumulator enables handling multi-frames messages.\n         * @param chunk Current chunk to reduce into accumulator\n         * @returns An accumulator value updated with the current chunk\n         */\n        reduceResponse(acc, chunk) {\n            let { data, dataLength, sequence } = acc || initialAcc;\n            if (chunk.readUInt16BE(0) !== channel) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid channel\", \"InvalidChannel\");\n            }\n            if (chunk.readUInt8(2) !== Tag) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid tag\", \"InvalidTag\");\n            }\n            if (chunk.readUInt16BE(3) !== sequence) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid sequence\", \"InvalidSequence\");\n            }\n            // Gets the total length of the response from the 1st frame\n            if (!acc) {\n                dataLength = chunk.readUInt16BE(5);\n            }\n            sequence++;\n            // The total length on the 1st frame takes 2 more bytes\n            const chunkData = chunk.slice(acc ? 5 : 7);\n            data = Buffer.concat([data, chunkData]);\n            // Removes any 0 padding\n            if (data.length > dataLength) {\n                data = data.slice(0, dataLength);\n            }\n            return {\n                data,\n                dataLength,\n                sequence,\n            };\n        },\n        /**\n         * Returns the response message that has been reduced from the HID USB frames\n         *\n         * @param acc The accumulator\n         * @returns A Buffer containing the cleaned response message, or null if no response message, or undefined if the\n         *   accumulator is incorrect (message length is not valid)\n         */\n        getReducedResult(acc) {\n            if (acc && acc.dataLength === acc.data.length) {\n                return acc.data;\n            }\n        },\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createHIDframing);\n//# sourceMappingURL=hid-framing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbGliLWVzL2hpZC1mcmFtaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNkJBQTZCO0FBQy9DO0FBQ0EsMEJBQTBCLDREQUFjO0FBQ3hDO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWM7QUFDeEM7QUFDQTtBQUNBLDBCQUEwQiw0REFBYztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUVBQWUsZ0JBQWdCLEVBQUM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZWZpZ2h0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL2xpYi1lcy9oaWQtZnJhbWluZy5qcz9mNGVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zcG9ydEVycm9yIH0gZnJvbSBcIkBsZWRnZXJocS9lcnJvcnNcIjtcbmNvbnN0IFRhZyA9IDB4MDU7XG5mdW5jdGlvbiBhc1VJbnQxNkJFKHZhbHVlKSB7XG4gICAgY29uc3QgYiA9IEJ1ZmZlci5hbGxvYygyKTtcbiAgICBiLndyaXRlVUludDE2QkUodmFsdWUsIDApO1xuICAgIHJldHVybiBiO1xufVxuY29uc3QgaW5pdGlhbEFjYyA9IHtcbiAgICBkYXRhOiBCdWZmZXIuYWxsb2MoMCksXG4gICAgZGF0YUxlbmd0aDogMCxcbiAgICBzZXF1ZW5jZTogMCxcbn07XG4vKipcbiAqIE9iamVjdCB0byBoYW5kbGUgSElEIGZyYW1lcyAoZW5jb2RpbmcgYW5kIGRlY29kaW5nKVxuICpcbiAqIEBwYXJhbSBjaGFubmVsXG4gKiBAcGFyYW0gcGFja2V0U2l6ZSBUaGUgSElEIHByb3RvY29sIHBhY2tldCBzaXplIGluIGJ5dGVzICh1c3VhbGx5IDY0KVxuICovXG5jb25zdCBjcmVhdGVISURmcmFtaW5nID0gKGNoYW5uZWwsIHBhY2tldFNpemUpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogRnJhbWVzL2VuY29kZXMgYW4gQVBEVSBtZXNzYWdlIGludG8gSElEIFVTQiBwYWNrZXRzL2ZyYW1lc1xuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gYXBkdSBUaGUgQVBEVSBtZXNzYWdlIHRvIHNlbmQsIGluIGEgQnVmZmVyIGNvbnRhaW5pbmcgW2NsYSwgaW5zLCBwMSwgcDIsIGRhdGEgbGVuZ3RoLCBkYXRhKGlmIG5vdCBlbXB0eSldXG4gICAgICAgICAqIEByZXR1cm5zIGFuIGFycmF5IG9mIEhJRCBVU0IgZnJhbWVzIHJlYWR5IHRvIGJlIHNlbnRcbiAgICAgICAgICovXG4gICAgICAgIG1ha2VCbG9ja3MoYXBkdSkge1xuICAgICAgICAgICAgLy8gRW5jb2RlcyB0aGUgQVBEVSBsZW5ndGggaW4gMiBieXRlcyBiZWZvcmUgdGhlIEFQRFUgaXRzZWxmLlxuICAgICAgICAgICAgLy8gVGhlIGxlbmd0aCBpcyBtZWFzdXJlZCBhcyB0aGUgbnVtYmVyIG9mIGJ5dGVzLlxuICAgICAgICAgICAgLy8gQXMgdGhlIHNpemUgb2YgdGhlIEFQRFUgYGRhdGFgIHNob3VsZCBoYXZlIGJlZW4gYWRkZWQgaW4gMSBieXRlIGp1c3QgYmVmb3JlIGBkYXRhYCxcbiAgICAgICAgICAgIC8vIHRoZSBtaW5pbXVtIHNpemUgb2YgYW4gQVBEVSBpcyA1IGJ5dGVzLlxuICAgICAgICAgICAgbGV0IGRhdGEgPSBCdWZmZXIuY29uY2F0KFthc1VJbnQxNkJFKGFwZHUubGVuZ3RoKSwgYXBkdV0pO1xuICAgICAgICAgICAgY29uc3QgYmxvY2tTaXplID0gcGFja2V0U2l6ZSAtIDU7XG4gICAgICAgICAgICBjb25zdCBuYkJsb2NrcyA9IE1hdGguY2VpbChkYXRhLmxlbmd0aCAvIGJsb2NrU2l6ZSk7XG4gICAgICAgICAgICAvLyBGaWxscyBkYXRhIHdpdGggMC1wYWRkaW5nXG4gICAgICAgICAgICBkYXRhID0gQnVmZmVyLmNvbmNhdChbZGF0YSwgQnVmZmVyLmFsbG9jKG5iQmxvY2tzICogYmxvY2tTaXplIC0gZGF0YS5sZW5ndGggKyAxKS5maWxsKDApXSk7XG4gICAgICAgICAgICBjb25zdCBibG9ja3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmJCbG9ja3M7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWQgPSBCdWZmZXIuYWxsb2MoNSk7XG4gICAgICAgICAgICAgICAgaGVhZC53cml0ZVVJbnQxNkJFKGNoYW5uZWwsIDApO1xuICAgICAgICAgICAgICAgIGhlYWQud3JpdGVVSW50OChUYWcsIDIpO1xuICAgICAgICAgICAgICAgIGhlYWQud3JpdGVVSW50MTZCRShpLCAzKTtcbiAgICAgICAgICAgICAgICAvLyBgc2xpY2VgIGFuZCBub3QgYHN1YmFycmF5YDogdGhpcyBtaWdodCBub3QgYmUgYSBOb2RlIEJ1ZmZlciwgYnV0IHByb2JhYmx5IG9ubHkgYSBVaW50OEFycmF5XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSBkYXRhLnNsaWNlKGkgKiBibG9ja1NpemUsIChpICsgMSkgKiBibG9ja1NpemUpO1xuICAgICAgICAgICAgICAgIGJsb2Nrcy5wdXNoKEJ1ZmZlci5jb25jYXQoW2hlYWQsIGNodW5rXSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGJsb2NrcztcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlZHVjZXMgSElEIFVTQiBwYWNrZXRzL2ZyYW1lcyB0byBvbmUgcmVzcG9uc2UuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBhY2MgVGhlIHZhbHVlIHJlc3VsdGluZyBmcm9tIChhY2N1bXVsYXRpbmcpIHRoZSBwcmV2aW91cyBjYWxsIG9mIHJlZHVjZVJlc3BvbnNlLlxuICAgICAgICAgKiAgIE9uIGZpcnN0IGNhbGwgaW5pdGlhbGl6ZWQgdG8gYGluaXRpYWxBY2NgLiBUaGUgYWNjdW11bGF0b3IgZW5hYmxlcyBoYW5kbGluZyBtdWx0aS1mcmFtZXMgbWVzc2FnZXMuXG4gICAgICAgICAqIEBwYXJhbSBjaHVuayBDdXJyZW50IGNodW5rIHRvIHJlZHVjZSBpbnRvIGFjY3VtdWxhdG9yXG4gICAgICAgICAqIEByZXR1cm5zIEFuIGFjY3VtdWxhdG9yIHZhbHVlIHVwZGF0ZWQgd2l0aCB0aGUgY3VycmVudCBjaHVua1xuICAgICAgICAgKi9cbiAgICAgICAgcmVkdWNlUmVzcG9uc2UoYWNjLCBjaHVuaykge1xuICAgICAgICAgICAgbGV0IHsgZGF0YSwgZGF0YUxlbmd0aCwgc2VxdWVuY2UgfSA9IGFjYyB8fCBpbml0aWFsQWNjO1xuICAgICAgICAgICAgaWYgKGNodW5rLnJlYWRVSW50MTZCRSgwKSAhPT0gY2hhbm5lbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUcmFuc3BvcnRFcnJvcihcIkludmFsaWQgY2hhbm5lbFwiLCBcIkludmFsaWRDaGFubmVsXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNodW5rLnJlYWRVSW50OCgyKSAhPT0gVGFnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRyYW5zcG9ydEVycm9yKFwiSW52YWxpZCB0YWdcIiwgXCJJbnZhbGlkVGFnXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNodW5rLnJlYWRVSW50MTZCRSgzKSAhPT0gc2VxdWVuY2UpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHJhbnNwb3J0RXJyb3IoXCJJbnZhbGlkIHNlcXVlbmNlXCIsIFwiSW52YWxpZFNlcXVlbmNlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gR2V0cyB0aGUgdG90YWwgbGVuZ3RoIG9mIHRoZSByZXNwb25zZSBmcm9tIHRoZSAxc3QgZnJhbWVcbiAgICAgICAgICAgIGlmICghYWNjKSB7XG4gICAgICAgICAgICAgICAgZGF0YUxlbmd0aCA9IGNodW5rLnJlYWRVSW50MTZCRSg1KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcXVlbmNlKys7XG4gICAgICAgICAgICAvLyBUaGUgdG90YWwgbGVuZ3RoIG9uIHRoZSAxc3QgZnJhbWUgdGFrZXMgMiBtb3JlIGJ5dGVzXG4gICAgICAgICAgICBjb25zdCBjaHVua0RhdGEgPSBjaHVuay5zbGljZShhY2MgPyA1IDogNyk7XG4gICAgICAgICAgICBkYXRhID0gQnVmZmVyLmNvbmNhdChbZGF0YSwgY2h1bmtEYXRhXSk7XG4gICAgICAgICAgICAvLyBSZW1vdmVzIGFueSAwIHBhZGRpbmdcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IGRhdGFMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5zbGljZSgwLCBkYXRhTGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgICAgICBkYXRhTGVuZ3RoLFxuICAgICAgICAgICAgICAgIHNlcXVlbmNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIHJlc3BvbnNlIG1lc3NhZ2UgdGhhdCBoYXMgYmVlbiByZWR1Y2VkIGZyb20gdGhlIEhJRCBVU0IgZnJhbWVzXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBhY2MgVGhlIGFjY3VtdWxhdG9yXG4gICAgICAgICAqIEByZXR1cm5zIEEgQnVmZmVyIGNvbnRhaW5pbmcgdGhlIGNsZWFuZWQgcmVzcG9uc2UgbWVzc2FnZSwgb3IgbnVsbCBpZiBubyByZXNwb25zZSBtZXNzYWdlLCBvciB1bmRlZmluZWQgaWYgdGhlXG4gICAgICAgICAqICAgYWNjdW11bGF0b3IgaXMgaW5jb3JyZWN0IChtZXNzYWdlIGxlbmd0aCBpcyBub3QgdmFsaWQpXG4gICAgICAgICAqL1xuICAgICAgICBnZXRSZWR1Y2VkUmVzdWx0KGFjYykge1xuICAgICAgICAgICAgaWYgKGFjYyAmJiBhY2MuZGF0YUxlbmd0aCA9PT0gYWNjLmRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYy5kYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSElEZnJhbWluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhpZC1mcmFtaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/lib-es/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeviceModelId: () => (/* binding */ DeviceModelId),\n/* harmony export */   IICCID: () => (/* binding */ IICCID),\n/* harmony export */   IIGenericHID: () => (/* binding */ IIGenericHID),\n/* harmony export */   IIKeyboardHID: () => (/* binding */ IIKeyboardHID),\n/* harmony export */   IIU2F: () => (/* binding */ IIU2F),\n/* harmony export */   IIWebUSB: () => (/* binding */ IIWebUSB),\n/* harmony export */   getBluetoothServiceUuids: () => (/* binding */ getBluetoothServiceUuids),\n/* harmony export */   getDeviceModel: () => (/* binding */ getDeviceModel),\n/* harmony export */   getInfosForServiceUuid: () => (/* binding */ getInfosForServiceUuid),\n/* harmony export */   identifyProductName: () => (/* binding */ identifyProductName),\n/* harmony export */   identifyTargetId: () => (/* binding */ identifyTargetId),\n/* harmony export */   identifyUSBProductId: () => (/* binding */ identifyUSBProductId),\n/* harmony export */   ledgerUSBVendorId: () => (/* binding */ ledgerUSBVendorId)\n/* harmony export */ });\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semver */ \"(ssr)/./node_modules/semver/index.js\");\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(semver__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nconst IIGenericHID = 0x01;\nconst IIKeyboardHID = 0x02;\nconst IIU2F = 0x04;\nconst IICCID = 0x08;\nconst IIWebUSB = 0x10;\nvar DeviceModelId;\n(function (DeviceModelId) {\n    /** Ledger Blue */\n    DeviceModelId[\"blue\"] = \"blue\";\n    /** Ledger Nano S */\n    DeviceModelId[\"nanoS\"] = \"nanoS\";\n    /** Ledger Nano S Plus */\n    DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n    /** Ledger Nano X */\n    DeviceModelId[\"nanoX\"] = \"nanoX\";\n    /** Ledger Stax */\n    DeviceModelId[\"stax\"] = \"stax\";\n    /** Ledger Flex (\"europa\" is the internal name) */\n    DeviceModelId[\"europa\"] = \"europa\";\n    /** Apex */\n    DeviceModelId[\"apex\"] = \"apex\";\n})(DeviceModelId || (DeviceModelId = {}));\nconst devices = {\n    [DeviceModelId.blue]: {\n        id: DeviceModelId.blue,\n        productName: \"Ledger Blue\",\n        productIdMM: 0x00,\n        legacyUsbProductId: 0x0000,\n        usbOnly: true,\n        memorySize: 480 * 1024,\n        masks: [0x31000000, 0x31010000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n    },\n    [DeviceModelId.nanoS]: {\n        id: DeviceModelId.nanoS,\n        productName: \"Ledger Nano S\",\n        productIdMM: 0x10,\n        legacyUsbProductId: 0x0001,\n        usbOnly: true,\n        memorySize: 320 * 1024,\n        masks: [0x31100000],\n        getBlockSize: (firmwareVersion) => semver__WEBPACK_IMPORTED_MODULE_0___default().lt(semver__WEBPACK_IMPORTED_MODULE_0___default().coerce(firmwareVersion) ?? \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024,\n    },\n    [DeviceModelId.nanoX]: {\n        id: DeviceModelId.nanoX,\n        productName: \"Ledger Nano X\",\n        productIdMM: 0x40,\n        legacyUsbProductId: 0x0004,\n        usbOnly: false,\n        memorySize: 2 * 1024 * 1024,\n        masks: [0x33000000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n            },\n        ],\n    },\n    [DeviceModelId.nanoSP]: {\n        id: DeviceModelId.nanoSP,\n        productName: \"Ledger Nano S Plus\",\n        productIdMM: 0x50,\n        legacyUsbProductId: 0x0005,\n        usbOnly: true,\n        memorySize: 1533 * 1024,\n        masks: [0x33100000],\n        getBlockSize: (_firmwareVersion) => 32,\n    },\n    [DeviceModelId.apex]: {\n        id: DeviceModelId.apex,\n        productName: \"Ledger Apex\",\n        productIdMM: 0x80,\n        legacyUsbProductId: 0x0008,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [0x33400000],\n        getBlockSize: (_firmwareVersion) => 32,\n        bluetoothSpec: [\n            /**\n             * 13D63400-2C97-6004-0001-4C6564676572, 13D63400-2C97-6004-0002-4C6564676572, and 13D63400-2C97-6004-0003-4C6564676572 Characteristics for Service 13D63400-2C97-6004-0000-4C6564676572\n             */\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\", // WILL CHANGE, for now same as Stax\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\", // WILL CHANGE, for now same as Stax\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\", // WILL CHANGE, for now same as Stax\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\", // WILL CHANGE, for now same as Stax\n            },\n        ],\n    },\n    [DeviceModelId.stax]: {\n        id: DeviceModelId.stax,\n        productName: \"Ledger Stax\",\n        productIdMM: 0x60,\n        legacyUsbProductId: 0x0006,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [0x33200000],\n        getBlockSize: (_firmwareVersion) => 32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n            },\n        ],\n    },\n    [DeviceModelId.europa]: {\n        id: DeviceModelId.europa,\n        productName: \"Ledger Flex\",\n        productIdMM: 0x70,\n        legacyUsbProductId: 0x0007,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [0x33300000],\n        getBlockSize: (_firmwareVersion) => 32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-3004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-3004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-3004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-3004-0003-4c6564676572\",\n            },\n        ],\n    },\n};\nconst productMap = {\n    Blue: DeviceModelId.blue,\n    \"Nano S\": DeviceModelId.nanoS,\n    \"Nano S Plus\": DeviceModelId.nanoSP,\n    \"Nano X\": DeviceModelId.nanoX,\n    Stax: DeviceModelId.stax,\n    Europa: DeviceModelId.europa,\n};\nconst devicesList = Object.values(devices);\n/**\n *\n */\nconst ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\nconst getDeviceModel = (id) => {\n    const info = devices[id];\n    if (!info)\n        throw new Error(\"device '\" + id + \"' does not exist\");\n    return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nconst identifyTargetId = (targetId) => {\n    const deviceModel = devicesList.find(({ masks }) => masks.find(mask => (targetId & 0xffff0000) === mask));\n    return deviceModel;\n};\n/**\n * From a given USB product id, return the deviceModel associated to it.\n *\n * The mapping from the product id is only based on the 2 most significant bytes.\n * For example, Stax is defined with a product id of 0x60ii, a product id 0x6011 would be mapped to it.\n */\nconst identifyUSBProductId = (usbProductId) => {\n    const legacy = devicesList.find(d => d.legacyUsbProductId === usbProductId);\n    if (legacy)\n        return legacy;\n    const mm = usbProductId >> 8;\n    const deviceModel = devicesList.find(d => d.productIdMM === mm);\n    return deviceModel;\n};\nconst identifyProductName = (productName) => {\n    const deviceModel = devicesList.find(d => d.id === productMap[productName]);\n    return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\nfor (const id in devices) {\n    const deviceModel = devices[id];\n    const { bluetoothSpec } = deviceModel;\n    if (bluetoothSpec) {\n        for (let i = 0; i < bluetoothSpec.length; i++) {\n            const spec = bluetoothSpec[i];\n            bluetoothServices.push(spec.serviceUuid);\n            serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = {\n                deviceModel,\n                ...spec,\n            };\n        }\n    }\n}\n/**\n *\n */\nconst getBluetoothServiceUuids = () => bluetoothServices;\n/**\n *\n */\nconst getInfosForServiceUuid = (uuid) => serviceUuidToInfos[uuid.toLowerCase()];\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js":
/*!*********************************************************!*\
  !*** ./node_modules/@ledgerhq/errors/lib-es/helpers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCustomErrorDeserializer: () => (/* binding */ addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* binding */ createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* binding */ deserializeError),\n/* harmony export */   serializeError: () => (/* binding */ serializeError)\n/* harmony export */ });\n/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nconst addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nconst createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        cause;\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !this.cause) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nconst deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nconst serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2Vycm9ycy9saWItZXMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDBCQUEwQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RlZmlnaHRlci13ZWIvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2Vycm9ycy9saWItZXMvaGVscGVycy5qcz9lZDBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnRpbnVlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvdHlwZS1idWlsdGlucyAqL1xuY29uc3QgZXJyb3JDbGFzc2VzID0ge307XG5jb25zdCBkZXNlcmlhbGl6ZXJzID0ge307XG5leHBvcnQgY29uc3QgYWRkQ3VzdG9tRXJyb3JEZXNlcmlhbGl6ZXIgPSAobmFtZSwgZGVzZXJpYWxpemVyKSA9PiB7XG4gICAgZGVzZXJpYWxpemVyc1tuYW1lXSA9IGRlc2VyaWFsaXplcjtcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlQ3VzdG9tRXJyb3JDbGFzcyA9IChuYW1lKSA9PiB7XG4gICAgY2xhc3MgQ3VzdG9tRXJyb3JDbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgICAgICAgY2F1c2U7XG4gICAgICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGZpZWxkcywgb3B0aW9ucykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgc3VwZXIobWVzc2FnZSB8fCBuYW1lLCBvcHRpb25zKTtcbiAgICAgICAgICAgIC8vIFNldCB0aGUgcHJvdG90eXBlIGV4cGxpY2l0bHkuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQvd2lraS9CcmVha2luZy1DaGFuZ2VzI2V4dGVuZGluZy1idWlsdC1pbnMtbGlrZS1lcnJvci1hcnJheS1hbmQtbWFwLW1heS1uby1sb25nZXItd29ya1xuICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEN1c3RvbUVycm9yQ2xhc3MucHJvdG90eXBlKTtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgICAgICBpZiAoZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBrIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICAgICAgdGhpc1trXSA9IGZpZWxkc1trXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBpc09iamVjdChvcHRpb25zKSAmJiBcImNhdXNlXCIgaW4gb3B0aW9ucyAmJiAhdGhpcy5jYXVzZSkge1xuICAgICAgICAgICAgICAgIC8vIC5jYXVzZSB3YXMgc3BlY2lmaWVkIGJ1dCB0aGUgc3VwZXJjb25zdHJ1Y3RvclxuICAgICAgICAgICAgICAgIC8vIGRpZCBub3QgY3JlYXRlIGFuIGluc3RhbmNlIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIGNvbnN0IGNhdXNlID0gb3B0aW9ucy5jYXVzZTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhdXNlID0gY2F1c2U7XG4gICAgICAgICAgICAgICAgaWYgKFwic3RhY2tcIiBpbiBjYXVzZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YWNrID0gdGhpcy5zdGFjayArIFwiXFxuQ0FVU0U6IFwiICsgY2F1c2Uuc3RhY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVycm9yQ2xhc3Nlc1tuYW1lXSA9IEN1c3RvbUVycm9yQ2xhc3M7XG4gICAgcmV0dXJuIEN1c3RvbUVycm9yQ2xhc3M7XG59O1xuZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiO1xufVxuLy8gaW5zcGlyZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcHJvZ3JhbWJsZS9lcnJpby9ibG9iL21hc3Rlci9pbmRleC5qc1xuZXhwb3J0IGNvbnN0IGRlc2VyaWFsaXplRXJyb3IgPSAob2JqZWN0KSA9PiB7XG4gICAgaWYgKG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9iamVjdC5tZXNzYWdlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbXNnID0gSlNPTi5wYXJzZShvYmplY3QubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgaWYgKG1zZy5tZXNzYWdlICYmIG1zZy5uYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCA9IG1zZztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIC8vIG5vdGhpbmdcbiAgICAgICAgfVxuICAgICAgICBsZXQgZXJyb3I7XG4gICAgICAgIGlmICh0eXBlb2Ygb2JqZWN0Lm5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSB9ID0gb2JqZWN0O1xuICAgICAgICAgICAgY29uc3QgZGVzID0gZGVzZXJpYWxpemVyc1tuYW1lXTtcbiAgICAgICAgICAgIGlmIChkZXMpIHtcbiAgICAgICAgICAgICAgICBlcnJvciA9IGRlcyhvYmplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IGNvbnN0cnVjdG9yID0gbmFtZSA9PT0gXCJFcnJvclwiID8gRXJyb3IgOiBlcnJvckNsYXNzZXNbbmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKCFjb25zdHJ1Y3Rvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJkZXNlcmlhbGl6aW5nIGFuIHVua25vd24gY2xhc3MgJ1wiICsgbmFtZSArIFwiJ1wiKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3RydWN0b3IgPSBjcmVhdGVDdXN0b21FcnJvckNsYXNzKG5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlcnJvciA9IE9iamVjdC5jcmVhdGUoY29uc3RydWN0b3IucHJvdG90eXBlKTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JbcHJvcF0gPSBvYmplY3RbcHJvcF07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc29tZXRpbWVzIHNldHRpbmcgYSBwcm9wZXJ0eSBjYW4gZmFpbCAoZS5nLiAubmFtZSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9iamVjdC5tZXNzYWdlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgZXJyb3IgPSBuZXcgRXJyb3Iob2JqZWN0Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciAmJiAhZXJyb3Iuc3RhY2sgJiYgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGVycm9yLCBkZXNlcmlhbGl6ZUVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXJyb3IoU3RyaW5nKG9iamVjdCkpO1xufTtcbi8vIGluc3BpcmVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9zZXJpYWxpemUtZXJyb3IvYmxvYi9tYXN0ZXIvaW5kZXguanNcbmV4cG9ydCBjb25zdCBzZXJpYWxpemVFcnJvciA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICghdmFsdWUpXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBkZXN0cm95Q2lyY3VsYXIodmFsdWUsIFtdKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBgW0Z1bmN0aW9uOiAke3ZhbHVlLm5hbWUgfHwgXCJhbm9ueW1vdXNcIn1dYDtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbi8vIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2Rlc3Ryb3ktY2lyY3VsYXJcbmZ1bmN0aW9uIGRlc3Ryb3lDaXJjdWxhcihmcm9tLCBzZWVuKSB7XG4gICAgY29uc3QgdG8gPSB7fTtcbiAgICBzZWVuLnB1c2goZnJvbSk7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoZnJvbSkpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBmcm9tW2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF2YWx1ZSB8fCB0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHRvW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWVuLmluZGV4T2YoZnJvbVtrZXldKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRvW2tleV0gPSBkZXN0cm95Q2lyY3VsYXIoZnJvbVtrZXldLCBzZWVuLnNsaWNlKDApKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHRvW2tleV0gPSBcIltDaXJjdWxhcl1cIjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmcm9tLm5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdG8ubmFtZSA9IGZyb20ubmFtZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmcm9tLm1lc3NhZ2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdG8ubWVzc2FnZSA9IGZyb20ubWVzc2FnZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmcm9tLnN0YWNrID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRvLnN0YWNrID0gZnJvbS5zdGFjaztcbiAgICB9XG4gICAgcmV0dXJuIHRvO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ledgerhq/errors/lib-es/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountAwaitingSendPendingOperations: () => (/* binding */ AccountAwaitingSendPendingOperations),\n/* harmony export */   AccountNameRequiredError: () => (/* binding */ AccountNameRequiredError),\n/* harmony export */   AccountNotSupported: () => (/* binding */ AccountNotSupported),\n/* harmony export */   AmountRequired: () => (/* binding */ AmountRequired),\n/* harmony export */   BluetoothRequired: () => (/* binding */ BluetoothRequired),\n/* harmony export */   BtcUnmatchedApp: () => (/* binding */ BtcUnmatchedApp),\n/* harmony export */   CantOpenDevice: () => (/* binding */ CantOpenDevice),\n/* harmony export */   CantScanQRCode: () => (/* binding */ CantScanQRCode),\n/* harmony export */   CashAddrNotSupported: () => (/* binding */ CashAddrNotSupported),\n/* harmony export */   ClaimRewardsFeesWarning: () => (/* binding */ ClaimRewardsFeesWarning),\n/* harmony export */   CurrencyNotSupported: () => (/* binding */ CurrencyNotSupported),\n/* harmony export */   DBNotReset: () => (/* binding */ DBNotReset),\n/* harmony export */   DBWrongPassword: () => (/* binding */ DBWrongPassword),\n/* harmony export */   DeviceAppVerifyNotSupported: () => (/* binding */ DeviceAppVerifyNotSupported),\n/* harmony export */   DeviceExtractOnboardingStateError: () => (/* binding */ DeviceExtractOnboardingStateError),\n/* harmony export */   DeviceGenuineSocketEarlyClose: () => (/* binding */ DeviceGenuineSocketEarlyClose),\n/* harmony export */   DeviceHalted: () => (/* binding */ DeviceHalted),\n/* harmony export */   DeviceInOSUExpected: () => (/* binding */ DeviceInOSUExpected),\n/* harmony export */   DeviceMangementKitError: () => (/* binding */ DeviceMangementKitError),\n/* harmony export */   DeviceNameInvalid: () => (/* binding */ DeviceNameInvalid),\n/* harmony export */   DeviceNeedsRestart: () => (/* binding */ DeviceNeedsRestart),\n/* harmony export */   DeviceNotGenuineError: () => (/* binding */ DeviceNotGenuineError),\n/* harmony export */   DeviceOnDashboardExpected: () => (/* binding */ DeviceOnDashboardExpected),\n/* harmony export */   DeviceOnDashboardUnexpected: () => (/* binding */ DeviceOnDashboardUnexpected),\n/* harmony export */   DeviceOnboardingStatePollingError: () => (/* binding */ DeviceOnboardingStatePollingError),\n/* harmony export */   DeviceShouldStayInApp: () => (/* binding */ DeviceShouldStayInApp),\n/* harmony export */   DeviceSocketFail: () => (/* binding */ DeviceSocketFail),\n/* harmony export */   DeviceSocketNoBulkStatus: () => (/* binding */ DeviceSocketNoBulkStatus),\n/* harmony export */   DisabledTransactionBroadcastError: () => (/* binding */ DisabledTransactionBroadcastError),\n/* harmony export */   DisconnectedDevice: () => (/* binding */ DisconnectedDevice),\n/* harmony export */   DisconnectedDeviceDuringOperation: () => (/* binding */ DisconnectedDeviceDuringOperation),\n/* harmony export */   DustLimit: () => (/* binding */ DustLimit),\n/* harmony export */   ETHAddressNonEIP: () => (/* binding */ ETHAddressNonEIP),\n/* harmony export */   EnpointConfigError: () => (/* binding */ EnpointConfigError),\n/* harmony export */   EthAppPleaseEnableContractData: () => (/* binding */ EthAppPleaseEnableContractData),\n/* harmony export */   ExpertModeRequired: () => (/* binding */ ExpertModeRequired),\n/* harmony export */   FeeEstimationFailed: () => (/* binding */ FeeEstimationFailed),\n/* harmony export */   FeeNotLoaded: () => (/* binding */ FeeNotLoaded),\n/* harmony export */   FeeNotLoadedSwap: () => (/* binding */ FeeNotLoadedSwap),\n/* harmony export */   FeeRequired: () => (/* binding */ FeeRequired),\n/* harmony export */   FeeTooHigh: () => (/* binding */ FeeTooHigh),\n/* harmony export */   FirmwareNotRecognized: () => (/* binding */ FirmwareNotRecognized),\n/* harmony export */   FirmwareOrAppUpdateRequired: () => (/* binding */ FirmwareOrAppUpdateRequired),\n/* harmony export */   GasLessThanEstimate: () => (/* binding */ GasLessThanEstimate),\n/* harmony export */   GenuineCheckFailed: () => (/* binding */ GenuineCheckFailed),\n/* harmony export */   HardResetFail: () => (/* binding */ HardResetFail),\n/* harmony export */   HederaInsufficientFundsForAssociation: () => (/* binding */ HederaInsufficientFundsForAssociation),\n/* harmony export */   HederaRecipientTokenAssociationRequired: () => (/* binding */ HederaRecipientTokenAssociationRequired),\n/* harmony export */   HederaRecipientTokenAssociationUnverified: () => (/* binding */ HederaRecipientTokenAssociationUnverified),\n/* harmony export */   HwTransportError: () => (/* binding */ HwTransportError),\n/* harmony export */   HwTransportErrorType: () => (/* binding */ HwTransportErrorType),\n/* harmony export */   InvalidAddress: () => (/* binding */ InvalidAddress),\n/* harmony export */   InvalidAddressBecauseDestinationIsAlsoSource: () => (/* binding */ InvalidAddressBecauseDestinationIsAlsoSource),\n/* harmony export */   InvalidNonce: () => (/* binding */ InvalidNonce),\n/* harmony export */   InvalidXRPTag: () => (/* binding */ InvalidXRPTag),\n/* harmony export */   LanguageNotFound: () => (/* binding */ LanguageNotFound),\n/* harmony export */   LatestFirmwareVersionRequired: () => (/* binding */ LatestFirmwareVersionRequired),\n/* harmony export */   LatestMCUInstalledError: () => (/* binding */ LatestMCUInstalledError),\n/* harmony export */   LedgerAPI4xx: () => (/* binding */ LedgerAPI4xx),\n/* harmony export */   LedgerAPI5xx: () => (/* binding */ LedgerAPI5xx),\n/* harmony export */   LedgerAPIError: () => (/* binding */ LedgerAPIError),\n/* harmony export */   LedgerAPIErrorWithMessage: () => (/* binding */ LedgerAPIErrorWithMessage),\n/* harmony export */   LedgerAPINotAvailable: () => (/* binding */ LedgerAPINotAvailable),\n/* harmony export */   LockedDeviceError: () => (/* binding */ LockedDeviceError),\n/* harmony export */   MCUNotGenuineToDashboard: () => (/* binding */ MCUNotGenuineToDashboard),\n/* harmony export */   ManagerAppAlreadyInstalledError: () => (/* binding */ ManagerAppAlreadyInstalledError),\n/* harmony export */   ManagerAppDepInstallRequired: () => (/* binding */ ManagerAppDepInstallRequired),\n/* harmony export */   ManagerAppDepUninstallRequired: () => (/* binding */ ManagerAppDepUninstallRequired),\n/* harmony export */   ManagerAppRelyOnBTCError: () => (/* binding */ ManagerAppRelyOnBTCError),\n/* harmony export */   ManagerDeviceLockedError: () => (/* binding */ ManagerDeviceLockedError),\n/* harmony export */   ManagerFirmwareNotEnoughSpaceError: () => (/* binding */ ManagerFirmwareNotEnoughSpaceError),\n/* harmony export */   ManagerNotEnoughSpaceError: () => (/* binding */ ManagerNotEnoughSpaceError),\n/* harmony export */   ManagerUninstallBTCDep: () => (/* binding */ ManagerUninstallBTCDep),\n/* harmony export */   MaxFeeTooLow: () => (/* binding */ MaxFeeTooLow),\n/* harmony export */   MaybeKeepTronAccountAlive: () => (/* binding */ MaybeKeepTronAccountAlive),\n/* harmony export */   MissingSwapPayloadParamaters: () => (/* binding */ MissingSwapPayloadParamaters),\n/* harmony export */   NetworkDown: () => (/* binding */ NetworkDown),\n/* harmony export */   NetworkError: () => (/* binding */ NetworkError),\n/* harmony export */   NoAccessToCamera: () => (/* binding */ NoAccessToCamera),\n/* harmony export */   NoAddressesFound: () => (/* binding */ NoAddressesFound),\n/* harmony export */   NoDBPathGiven: () => (/* binding */ NoDBPathGiven),\n/* harmony export */   NotEnoughBalance: () => (/* binding */ NotEnoughBalance),\n/* harmony export */   NotEnoughBalanceBecauseDestinationNotCreated: () => (/* binding */ NotEnoughBalanceBecauseDestinationNotCreated),\n/* harmony export */   NotEnoughBalanceFees: () => (/* binding */ NotEnoughBalanceFees),\n/* harmony export */   NotEnoughBalanceInParentAccount: () => (/* binding */ NotEnoughBalanceInParentAccount),\n/* harmony export */   NotEnoughBalanceSwap: () => (/* binding */ NotEnoughBalanceSwap),\n/* harmony export */   NotEnoughBalanceToDelegate: () => (/* binding */ NotEnoughBalanceToDelegate),\n/* harmony export */   NotEnoughGas: () => (/* binding */ NotEnoughGas),\n/* harmony export */   NotEnoughGasSwap: () => (/* binding */ NotEnoughGasSwap),\n/* harmony export */   NotEnoughSpendableBalance: () => (/* binding */ NotEnoughSpendableBalance),\n/* harmony export */   NotEnoughToRestake: () => (/* binding */ NotEnoughToRestake),\n/* harmony export */   NotEnoughToStake: () => (/* binding */ NotEnoughToStake),\n/* harmony export */   NotEnoughToUnstake: () => (/* binding */ NotEnoughToUnstake),\n/* harmony export */   NotSupportedLegacyAddress: () => (/* binding */ NotSupportedLegacyAddress),\n/* harmony export */   OpReturnDataSizeLimit: () => (/* binding */ OpReturnDataSizeLimit),\n/* harmony export */   PairingFailed: () => (/* binding */ PairingFailed),\n/* harmony export */   PasswordIncorrectError: () => (/* binding */ PasswordIncorrectError),\n/* harmony export */   PasswordsDontMatchError: () => (/* binding */ PasswordsDontMatchError),\n/* harmony export */   PeerRemovedPairing: () => (/* binding */ PeerRemovedPairing),\n/* harmony export */   PendingOperation: () => (/* binding */ PendingOperation),\n/* harmony export */   PinNotSet: () => (/* binding */ PinNotSet),\n/* harmony export */   PriorityFeeHigherThanMaxFee: () => (/* binding */ PriorityFeeHigherThanMaxFee),\n/* harmony export */   PriorityFeeTooHigh: () => (/* binding */ PriorityFeeTooHigh),\n/* harmony export */   PriorityFeeTooLow: () => (/* binding */ PriorityFeeTooLow),\n/* harmony export */   RecipientRequired: () => (/* binding */ RecipientRequired),\n/* harmony export */   RecommendSubAccountsToEmpty: () => (/* binding */ RecommendSubAccountsToEmpty),\n/* harmony export */   RecommendUndelegation: () => (/* binding */ RecommendUndelegation),\n/* harmony export */   ReplacementTransactionUnderpriced: () => (/* binding */ ReplacementTransactionUnderpriced),\n/* harmony export */   RestakeNotEnoughStakedBalanceLeft: () => (/* binding */ RestakeNotEnoughStakedBalanceLeft),\n/* harmony export */   SequenceNumberError: () => (/* binding */ SequenceNumberError),\n/* harmony export */   StatusCodes: () => (/* binding */ StatusCodes),\n/* harmony export */   SyncError: () => (/* binding */ SyncError),\n/* harmony export */   TimeoutTagged: () => (/* binding */ TimeoutTagged),\n/* harmony export */   TransactionHasBeenValidatedError: () => (/* binding */ TransactionHasBeenValidatedError),\n/* harmony export */   TransportError: () => (/* binding */ TransportError),\n/* harmony export */   TransportExchangeTimeoutError: () => (/* binding */ TransportExchangeTimeoutError),\n/* harmony export */   TransportInterfaceNotAvailable: () => (/* binding */ TransportInterfaceNotAvailable),\n/* harmony export */   TransportOpenUserCancelled: () => (/* binding */ TransportOpenUserCancelled),\n/* harmony export */   TransportRaceCondition: () => (/* binding */ TransportRaceCondition),\n/* harmony export */   TransportStatusError: () => (/* binding */ TransportStatusError),\n/* harmony export */   TransportWebUSBGestureRequired: () => (/* binding */ TransportWebUSBGestureRequired),\n/* harmony export */   TronEmptyAccount: () => (/* binding */ TronEmptyAccount),\n/* harmony export */   UnavailableTezosOriginatedAccountReceive: () => (/* binding */ UnavailableTezosOriginatedAccountReceive),\n/* harmony export */   UnavailableTezosOriginatedAccountSend: () => (/* binding */ UnavailableTezosOriginatedAccountSend),\n/* harmony export */   UnexpectedBootloader: () => (/* binding */ UnexpectedBootloader),\n/* harmony export */   UnknownMCU: () => (/* binding */ UnknownMCU),\n/* harmony export */   UnresponsiveDeviceError: () => (/* binding */ UnresponsiveDeviceError),\n/* harmony export */   UnstakeNotEnoughStakedBalanceLeft: () => (/* binding */ UnstakeNotEnoughStakedBalanceLeft),\n/* harmony export */   UpdateFetchFileFail: () => (/* binding */ UpdateFetchFileFail),\n/* harmony export */   UpdateIncorrectHash: () => (/* binding */ UpdateIncorrectHash),\n/* harmony export */   UpdateIncorrectSig: () => (/* binding */ UpdateIncorrectSig),\n/* harmony export */   UpdateYourApp: () => (/* binding */ UpdateYourApp),\n/* harmony export */   UserRefusedAddress: () => (/* binding */ UserRefusedAddress),\n/* harmony export */   UserRefusedAllowManager: () => (/* binding */ UserRefusedAllowManager),\n/* harmony export */   UserRefusedDeviceNameChange: () => (/* binding */ UserRefusedDeviceNameChange),\n/* harmony export */   UserRefusedFirmwareUpdate: () => (/* binding */ UserRefusedFirmwareUpdate),\n/* harmony export */   UserRefusedOnDevice: () => (/* binding */ UserRefusedOnDevice),\n/* harmony export */   WebsocketConnectionError: () => (/* binding */ WebsocketConnectionError),\n/* harmony export */   WebsocketConnectionFailed: () => (/* binding */ WebsocketConnectionFailed),\n/* harmony export */   WrongAppForCurrency: () => (/* binding */ WrongAppForCurrency),\n/* harmony export */   WrongDeviceForAccount: () => (/* binding */ WrongDeviceForAccount),\n/* harmony export */   WrongDeviceForAccountPayout: () => (/* binding */ WrongDeviceForAccountPayout),\n/* harmony export */   WrongDeviceForAccountRefund: () => (/* binding */ WrongDeviceForAccountRefund),\n/* harmony export */   addCustomErrorDeserializer: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.deserializeError),\n/* harmony export */   getAltStatusMessage: () => (/* binding */ getAltStatusMessage),\n/* harmony export */   serializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.serializeError)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js\");\n\n\nconst AccountNameRequiredError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNameRequired\");\nconst AccountNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNotSupported\");\nconst AccountAwaitingSendPendingOperations = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountAwaitingSendPendingOperations\");\nconst AmountRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AmountRequired\");\nconst BluetoothRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BluetoothRequired\");\nconst BtcUnmatchedApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BtcUnmatchedApp\");\nconst CantOpenDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantOpenDevice\");\nconst CashAddrNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CashAddrNotSupported\");\nconst ClaimRewardsFeesWarning = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ClaimRewardsFeesWarning\");\nconst CurrencyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CurrencyNotSupported\");\nconst DeviceAppVerifyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceAppVerifyNotSupported\");\nconst DeviceGenuineSocketEarlyClose = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceGenuineSocketEarlyClose\");\nconst DeviceNotGenuineError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNotGenuine\");\nconst DeviceOnDashboardExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardExpected\");\nconst DeviceOnDashboardUnexpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardUnexpected\");\nconst DeviceInOSUExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceInOSUExpected\");\nconst DeviceHalted = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceHalted\");\nconst DeviceNameInvalid = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNameInvalid\");\nconst DeviceSocketFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketFail\");\nconst DeviceSocketNoBulkStatus = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nconst DeviceNeedsRestart = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nconst UnresponsiveDeviceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnresponsiveDeviceError\");\nconst DisconnectedDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDevice\");\nconst DisconnectedDeviceDuringOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDeviceDuringOperation\");\nconst DeviceExtractOnboardingStateError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceExtractOnboardingStateError\");\nconst DeviceOnboardingStatePollingError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnboardingStatePollingError\");\nconst EnpointConfigError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EnpointConfig\");\nconst EthAppPleaseEnableContractData = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EthAppPleaseEnableContractData\");\nconst FeeEstimationFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeEstimationFailed\");\nconst FirmwareNotRecognized = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareNotRecognized\");\nconst HardResetFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HardResetFail\");\nconst InvalidXRPTag = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidXRPTag\");\nconst InvalidAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddress\");\nconst InvalidNonce = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidNonce\");\nconst InvalidAddressBecauseDestinationIsAlsoSource = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nconst LatestMCUInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LatestMCUInstalledError\");\nconst LatestFirmwareVersionRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LatestFirmwareVersionRequired\");\nconst UnknownMCU = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnknownMCU\");\nconst LedgerAPIError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIError\");\nconst LedgerAPIErrorWithMessage = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIErrorWithMessage\");\nconst LedgerAPINotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPINotAvailable\");\nconst ManagerAppAlreadyInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppAlreadyInstalled\");\nconst ManagerAppRelyOnBTCError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppRelyOnBTC\");\nconst ManagerAppDepInstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepInstallRequired\");\nconst ManagerAppDepUninstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepUninstallRequired\");\nconst ManagerDeviceLockedError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerDeviceLocked\");\nconst ManagerFirmwareNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerFirmwareNotEnoughSpace\");\nconst ManagerNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerNotEnoughSpace\");\nconst ManagerUninstallBTCDep = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerUninstallBTCDep\");\nconst NetworkDown = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NetworkDown\");\nconst NetworkError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NetworkError\");\nconst NoAddressesFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAddressesFound\");\nconst NotEnoughBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalance\");\nconst NotEnoughBalanceFees = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceFees\");\nconst NotEnoughBalanceSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceSwap\");\nconst NotEnoughBalanceToDelegate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceToDelegate\");\nconst UnstakeNotEnoughStakedBalanceLeft = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnstakeNotEnoughStakedBalanceLeft\");\nconst RestakeNotEnoughStakedBalanceLeft = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RestakeNotEnoughStakedBalanceLeft\");\nconst NotEnoughToRestake = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughToRestake\");\nconst NotEnoughToUnstake = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughToUnstake\");\nconst NotEnoughBalanceInParentAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceInParentAccount\");\nconst NotEnoughSpendableBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughSpendableBalance\");\nconst NotEnoughBalanceBecauseDestinationNotCreated = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nconst NotEnoughToStake = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughToStake\");\nconst NoAccessToCamera = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAccessToCamera\");\nconst NotEnoughGas = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nconst NotEnoughGasSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughGasSwap\");\nconst TronEmptyAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TronEmptyAccount\");\nconst MaybeKeepTronAccountAlive = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MaybeKeepTronAccountAlive\");\nconst NotSupportedLegacyAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotSupportedLegacyAddress\");\nconst GasLessThanEstimate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GasLessThanEstimate\");\nconst PriorityFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooLow\");\nconst PriorityFeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooHigh\");\nconst PriorityFeeHigherThanMaxFee = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeHigherThanMaxFee\");\nconst MaxFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MaxFeeTooLow\");\nconst PasswordsDontMatchError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordsDontMatch\");\nconst PasswordIncorrectError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordIncorrect\");\nconst RecommendSubAccountsToEmpty = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendSubAccountsToEmpty\");\nconst RecommendUndelegation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendUndelegation\");\nconst TimeoutTagged = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TimeoutTagged\");\nconst UnexpectedBootloader = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnexpectedBootloader\");\nconst MCUNotGenuineToDashboard = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MCUNotGenuineToDashboard\");\nconst RecipientRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecipientRequired\");\nconst UnavailableTezosOriginatedAccountReceive = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountReceive\");\nconst UnavailableTezosOriginatedAccountSend = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountSend\");\nconst UpdateFetchFileFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateFetchFileFail\");\nconst UpdateIncorrectHash = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectHash\");\nconst UpdateIncorrectSig = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectSig\");\nconst UpdateYourApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateYourApp\");\nconst UserRefusedDeviceNameChange = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedDeviceNameChange\");\nconst UserRefusedAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAddress\");\nconst UserRefusedFirmwareUpdate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedFirmwareUpdate\");\nconst UserRefusedAllowManager = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAllowManager\");\nconst UserRefusedOnDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nconst PinNotSet = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PinNotSet\");\nconst ExpertModeRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ExpertModeRequired\");\nconst TransportOpenUserCancelled = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportOpenUserCancelled\");\nconst TransportInterfaceNotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportInterfaceNotAvailable\");\nconst TransportRaceCondition = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportRaceCondition\");\nconst TransportWebUSBGestureRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportWebUSBGestureRequired\");\nconst TransactionHasBeenValidatedError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransactionHasBeenValidatedError\");\nconst TransportExchangeTimeoutError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportExchangeTimeoutError\");\nconst DeviceShouldStayInApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceShouldStayInApp\");\nconst WebsocketConnectionError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionError\");\nconst WebsocketConnectionFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionFailed\");\nconst WrongDeviceForAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccount\");\nconst WrongDeviceForAccountPayout = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccountPayout\");\nconst MissingSwapPayloadParamaters = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MissingSwapPayloadParamaters\");\nconst WrongDeviceForAccountRefund = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccountRefund\");\nconst WrongAppForCurrency = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongAppForCurrency\");\nconst ETHAddressNonEIP = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ETHAddressNonEIP\");\nconst CantScanQRCode = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantScanQRCode\");\nconst FeeNotLoaded = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeNotLoaded\");\nconst FeeNotLoadedSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeNotLoadedSwap\");\nconst FeeRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeRequired\");\nconst FeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeTooHigh\");\nconst PendingOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PendingOperation\");\nconst SyncError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"SyncError\");\nconst PairingFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PairingFailed\");\nconst PeerRemovedPairing = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PeerRemovedPairing\");\nconst GenuineCheckFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GenuineCheckFailed\");\nconst LedgerAPI4xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI4xx\");\nconst LedgerAPI5xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI5xx\");\nconst FirmwareOrAppUpdateRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nconst ReplacementTransactionUnderpriced = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nconst OpReturnDataSizeLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"OpReturnSizeLimit\");\nconst DustLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DustLimit\");\n// Hedera family\nconst HederaInsufficientFundsForAssociation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HederaInsufficientFundsForAssociation\");\nconst HederaRecipientTokenAssociationRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HederaRecipientTokenAssociationRequired\");\nconst HederaRecipientTokenAssociationUnverified = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HederaRecipientTokenAssociationUnverified\");\n// Language\nconst LanguageNotFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LanguageNotFound\");\n// db stuff, no need to translate\nconst NoDBPathGiven = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoDBPathGiven\");\nconst DBWrongPassword = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBWrongPassword\");\nconst DBNotReset = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBNotReset\");\nconst SequenceNumberError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"SequenceNumberError\");\nconst DisabledTransactionBroadcastError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisabledTransactionBroadcastError\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nvar HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nclass HwTransportError extends Error {\n    type;\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nclass TransportError extends Error {\n    id;\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportError\", e => new TransportError(e.message, e.id));\nconst StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    DEVICE_IN_RECOVERY_MODE: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n    APP_NOT_FOUND_OR_INVALID_CONTEXT: 0x5123,\n    INVALID_APP_NAME_LENGTH: 0x670a,\n    GEN_AES_KEY_FAILED: 0x5419,\n    INTERNAL_CRYPTO_OPERATION_FAILED: 0x541a,\n    INTERNAL_COMPUTE_AES_CMAC_FAILED: 0x541b,\n    ENCRYPT_APP_STORAGE_FAILED: 0x541c,\n    INVALID_BACKUP_STATE: 0x6642,\n    PIN_NOT_SET: 0x5502,\n    INVALID_BACKUP_LENGTH: 0x6733,\n    INVALID_RESTORE_STATE: 0x6643,\n    INVALID_CHUNK_LENGTH: 0x6734,\n    INVALID_BACKUP_HEADER: 0x684a,\n    // Not documented:\n    TRUSTCHAIN_WRONG_SEED: 0xb007,\n};\nfunction getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nclass TransportStatusError extends Error {\n    statusCode;\n    statusText;\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nclass LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\nclass DeviceMangementKitError extends Error {\n    constructor(name, message) {\n        super(message);\n        this.name = name;\n        Object.setPrototypeOf(this, DeviceMangementKitError.prototype);\n    }\n}\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransportWebHID)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/hw-transport */ \"(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\");\n/* harmony import */ var _ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/devices/hid-framing */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js\");\n/* harmony import */ var _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/devices */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\n\n\n\n\n\nconst ledgerDevices = [\n    {\n        vendorId: _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.ledgerUSBVendorId,\n    },\n];\nconst isSupported = () => Promise.resolve(!!(window.navigator && window.navigator.hid));\nconst getHID = () => {\n    // $FlowFixMe\n    const { hid } = navigator;\n    if (!hid)\n        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n    return hid;\n};\nasync function requestLedgerDevices() {\n    const device = await getHID().requestDevice({\n        filters: ledgerDevices,\n    });\n    if (Array.isArray(device))\n        return device;\n    return [device];\n}\nasync function getLedgerDevices() {\n    const devices = await getHID().getDevices();\n    return devices.filter(d => d.vendorId === _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.ledgerUSBVendorId);\n}\nasync function getFirstLedgerDevice() {\n    const existingDevices = await getLedgerDevices();\n    if (existingDevices.length > 0)\n        return existingDevices[0];\n    const devices = await requestLedgerDevices();\n    return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\nclass TransportWebHID extends _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    device;\n    deviceModel;\n    channel = Math.floor(Math.random() * 0xffff);\n    packetSize = 64;\n    constructor(device) {\n        super();\n        this.device = device;\n        this.deviceModel =\n            typeof device.productId === \"number\" ? (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId) : undefined;\n        device.addEventListener(\"inputreport\", this.onInputReport);\n    }\n    inputs = [];\n    inputCallback;\n    read = () => {\n        if (this.inputs.length) {\n            return Promise.resolve(this.inputs.shift());\n        }\n        return new Promise(success => {\n            this.inputCallback = success;\n        });\n    };\n    onInputReport = (e) => {\n        const buffer = Buffer.from(e.data.buffer);\n        if (this.inputCallback) {\n            this.inputCallback(buffer);\n            this.inputCallback = null;\n        }\n        else {\n            this.inputs.push(buffer);\n        }\n    };\n    /**\n     * Check if WebUSB transport is supported.\n     */\n    static isSupported = isSupported;\n    /**\n     * List the WebUSB devices that was previously authorized by the user.\n     */\n    static list = getLedgerDevices;\n    /**\n     * Actively listen to WebUSB devices and emit ONE device\n     * that was either accepted before, if not it will trigger the native permission UI.\n     *\n     * Important: it must be called in the context of a UI click!\n     */\n    static listen = (observer) => {\n        let unsubscribed = false;\n        getFirstLedgerDevice().then(device => {\n            if (!device) {\n                observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n            }\n            else if (!unsubscribed) {\n                const deviceModel = typeof device.productId === \"number\"\n                    ? (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId)\n                    : undefined;\n                observer.next({\n                    type: \"add\",\n                    descriptor: device,\n                    deviceModel,\n                });\n                observer.complete();\n            }\n        }, error => {\n            observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportOpenUserCancelled(error.message));\n        });\n        function unsubscribe() {\n            unsubscribed = true;\n        }\n        return {\n            unsubscribe,\n        };\n    };\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */\n    static async request() {\n        const [device] = await requestLedgerDevices();\n        return TransportWebHID.open(device);\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */\n    static async openConnected() {\n        const devices = await getLedgerDevices();\n        if (devices.length === 0)\n            return null;\n        return TransportWebHID.open(devices[0]);\n    }\n    /**\n     * Create a Ledger transport with a HIDDevice\n     */\n    static async open(device) {\n        await device.open();\n        const transport = new TransportWebHID(device);\n        const onDisconnect = e => {\n            if (device === e.device) {\n                getHID().removeEventListener(\"disconnect\", onDisconnect);\n                transport._emitDisconnect(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDevice());\n            }\n        };\n        getHID().addEventListener(\"disconnect\", onDisconnect);\n        return transport;\n    }\n    _disconnectEmitted = false;\n    _emitDisconnect = (e) => {\n        if (this._disconnectEmitted)\n            return;\n        this._disconnectEmitted = true;\n        this.emit(\"disconnect\", e);\n    };\n    /**\n     * Release the transport device\n     */\n    async close() {\n        await this.exchangeBusyPromise;\n        this.device.removeEventListener(\"inputreport\", this.onInputReport);\n        await this.device.close();\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */\n    exchange = async (apdu) => {\n        const b = await this.exchangeAtomicImpl(async () => {\n            const { channel, packetSize } = this;\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n            const framing = (0,_ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(channel, packetSize);\n            // Write...\n            const blocks = framing.makeBlocks(apdu);\n            for (let i = 0; i < blocks.length; i++) {\n                await this.device.sendReport(0, blocks[i]);\n            }\n            // Read...\n            let result;\n            let acc;\n            while (!(result = framing.getReducedResult(acc))) {\n                try {\n                    const buffer = await this.read();\n                    acc = framing.reduceResponse(acc, buffer);\n                }\n                catch (e) {\n                    if (e instanceof _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportError && e.id === \"InvalidChannel\") {\n                        // this can happen if the device is connected\n                        // on a different channel (like another app)\n                        // in this case we just filter out the event\n                        continue;\n                    }\n                    throw e;\n                }\n            }\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"<= \" + result.toString(\"hex\"));\n            return result;\n        }).catch(e => {\n            if (e && e.message && e.message.includes(\"write\")) {\n                this._emitDisconnect(e);\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDeviceDuringOperation(e.message);\n            }\n            throw e;\n        });\n        return b;\n    };\n    setScrambleKey() { }\n}\n//# sourceMappingURL=TransportWebHID.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodes: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes),\n/* harmony export */   TransportError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError),\n/* harmony export */   TransportStatusError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError),\n/* harmony export */   \"default\": () => (/* binding */ Transport),\n/* harmony export */   getAltStatusMessage: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.getAltStatusMessage)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n\n\n\n\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nclass Transport {\n    exchangeTimeout = 30000;\n    unresponsiveTimeout = 15000;\n    deviceModel = null;\n    tracer;\n    constructor({ context, logType } = {}) {\n        this.tracer = new _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__.LocalTracer(logType ?? DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Check if the transport is supported on the current platform/browser.\n     * @returns {Promise<boolean>} A promise that resolves with a boolean indicating support.\n     */\n    static isSupported;\n    /**\n     * List all available descriptors for the transport.\n     * For a better granularity, checkout `listen()`.\n     *\n     * @returns {Promise<Array<any>>} A promise that resolves with an array of descriptors.\n     * @example\n     * TransportFoo.list().then(descriptors => ...)\n     */\n    static list;\n    /**\n     * Listen for device events for the transport. The method takes an observer of DescriptorEvent and returns a Subscription.\n     * A DescriptorEvent is an object containing a \"descriptor\" and a \"type\" field. The \"type\" field can be \"add\" or \"remove\", and the \"descriptor\" field can be passed to the \"open\" method.\n     * The \"listen\" method will first emit all currently connected devices and then will emit events as they occur, such as when a USB device is plugged in or a Bluetooth device becomes discoverable.\n     * @param {Observer<DescriptorEvent<any>>} observer - An object with \"next\", \"error\", and \"complete\" functions, following the observer pattern.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop listening to descriptors.\n     * @example\n    const sub = TransportFoo.listen({\n    next: e => {\n      if (e.type===\"add\") {\n        sub.unsubscribe();\n        const transport = await TransportFoo.open(e.descriptor);\n        ...\n      }\n    },\n    error: error => {},\n    complete: () => {}\n    })\n     */\n    static listen;\n    /**\n     * Attempt to create a Transport instance with a specific descriptor.\n     * @param {any} descriptor - The descriptor to open the transport with.\n     * @param {number} timeout - An optional timeout for the transport connection.\n     * @param {TraceContext} context Optional tracing/log context\n     * @returns {Promise<Transport>} A promise that resolves with a Transport instance.\n     * @example\n    TransportFoo.open(descriptor).then(transport => ...)\n     */\n    static open;\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */\n    exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = () => {\n            unsubscribed = true;\n        };\n        const main = async () => {\n            if (unsubscribed)\n                return;\n            for (const apdu of apdus) {\n                const r = await this.exchange(apdu);\n                if (unsubscribed)\n                    return;\n                const status = r.readUInt16BE(r.length - 2);\n                if (status !== _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK) {\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(status);\n                }\n                observer.next(r);\n            }\n        };\n        main().then(() => !unsubscribed && observer.complete(), e => !unsubscribed && observer.error(e));\n        return { unsubscribe };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */\n    setScrambleKey(_key) { }\n    /**\n     * Close the connection with the device.\n     *\n     * Note: for certain transports (hw-transport-node-hid-singleton for ex), once the promise resolved,\n     * the transport instance is actually still cached, and the device is disconnected only after a defined timeout.\n     * But for the consumer of the Transport, this does not matter and it can consider the transport to be closed.\n     *\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */\n    close() {\n        return Promise.resolve();\n    }\n    _events = new (events__WEBPACK_IMPORTED_MODULE_0___default())();\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */\n    on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */\n    off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */\n    setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */\n    setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */\n    setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * Send data to the device using the higher level API.\n     *\n     * @param {number} cla - The instruction class for the command.\n     * @param {number} ins - The instruction code for the command.\n     * @param {number} p1 - The first parameter for the instruction.\n     * @param {number} p2 - The second parameter for the instruction.\n     * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n     * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    send = async (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [_ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK], { abortTimeoutMs } = {}) => {\n        const tracer = this.tracer.withUpdatedContext({ function: \"send\" });\n        if (data.length >= 256) {\n            tracer.trace(\"data.length exceeded 256 bytes limit\", { dataLength: data.length });\n            throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n        }\n        tracer.trace(\"Starting an exchange\", { abortTimeoutMs });\n        const response = await this.exchange(\n        // The size of the data is added in 1 byte just before `data`\n        Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]), { abortTimeoutMs });\n        tracer.trace(\"Received response from exchange\");\n        const sw = response.readUInt16BE(response.length - 2);\n        if (!statusList.some(s => s === sw)) {\n            throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(sw);\n        }\n        return response;\n    };\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */\n    static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject) => {\n            let found = false;\n            const sub = this.listen({\n                next: e => {\n                    found = true;\n                    if (sub)\n                        sub.unsubscribe();\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: e => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: () => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                },\n            });\n            const listenTimeoutId = listenTimeout\n                ? setTimeout(() => {\n                    sub.unsubscribe();\n                    reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n                }, listenTimeout)\n                : null;\n        });\n    }\n    // Blocks other exchange to happen concurrently\n    exchangeBusyPromise;\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */\n    async exchangeAtomicImpl(f) {\n        const tracer = this.tracer.withUpdatedContext({\n            function: \"exchangeAtomicImpl\",\n            unresponsiveTimeout: this.unresponsiveTimeout,\n        });\n        if (this.exchangeBusyPromise) {\n            tracer.trace(\"Atomic exchange is already busy\");\n            throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n        }\n        // Sets the atomic guard\n        let resolveBusy;\n        const busyPromise = new Promise(r => {\n            resolveBusy = r;\n        });\n        this.exchangeBusyPromise = busyPromise;\n        // The device unresponsiveness handler\n        let unresponsiveReached = false;\n        const timeout = setTimeout(() => {\n            tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                unresponsiveTimeout: this.unresponsiveTimeout,\n            });\n            unresponsiveReached = true;\n            this.emit(\"unresponsive\");\n        }, this.unresponsiveTimeout);\n        try {\n            const res = await f();\n            if (unresponsiveReached) {\n                tracer.trace(\"Device was unresponsive, emitting responsive\");\n                this.emit(\"responsive\");\n            }\n            return res;\n        }\n        finally {\n            tracer.trace(\"Finalize, clearing busy guard\");\n            clearTimeout(timeout);\n            if (resolveBusy)\n                resolveBusy();\n            this.exchangeBusyPromise = null;\n        }\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods) {\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    _appAPIlock = null;\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return async (...args) => {\n            const { _appAPIlock } = this;\n            if (_appAPIlock) {\n                return Promise.reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n            }\n            try {\n                this._appAPIlock = methodName;\n                this.setScrambleKey(scrambleKey);\n                return await f.apply(ctx, args);\n            }\n            finally {\n                this._appAPIlock = null;\n            }\n        };\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */\n    updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */\n    getTraceContext() {\n        return this.tracer.getContext();\n    }\n    static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n    static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n//# sourceMappingURL=Transport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ledgerhq/logs/lib-es/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalTracer: () => (/* binding */ LocalTracer),\n/* harmony export */   listen: () => (/* binding */ listen),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   trace: () => (/* binding */ trace)\n/* harmony export */ });\nlet id = 0;\nconst subscribers = [];\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nconst log = (type, message, data) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    dispatch(obj);\n};\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */\nconst trace = ({ type, message, data, context, }) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    if (context)\n        obj.context = context;\n    dispatch(obj);\n};\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */\nclass LocalTracer {\n    type;\n    context;\n    constructor(type, context) {\n        this.type = type;\n        this.context = context;\n    }\n    trace(message, data) {\n        trace({\n            type: this.type,\n            message,\n            data,\n            context: this.context,\n        });\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n    }\n    updateContext(contextToAdd) {\n        this.context = { ...this.context, ...contextToAdd };\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = type;\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `type`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withType(type) {\n        return new LocalTracer(type, this.context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with a new `context`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    withContext(context) {\n        return new LocalTracer(this.type, context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `context`,\n     * on which an additional context is merged with the existing one.\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withUpdatedContext(contextToAdd) {\n        return new LocalTracer(this.type, { ...this.context, ...contextToAdd });\n    }\n}\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nconst listen = (cb) => {\n    subscribers.push(cb);\n    return () => {\n        const i = subscribers.indexOf(cb);\n        if (i !== -1) {\n            // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n            subscribers[i] = subscribers[subscribers.length - 1];\n            subscribers.pop();\n        }\n    };\n};\nfunction dispatch(log) {\n    for (let i = 0; i < subscribers.length; i++) {\n        try {\n            subscribers[i](log);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nif (typeof window !== \"undefined\") {\n    window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2xvZ3MvbGliLWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlCQUFpQiwrQkFBK0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsa0NBQWtDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0JBQXdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RlZmlnaHRlci13ZWIvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2xvZ3MvbGliLWVzL2luZGV4LmpzP2UzMzgiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGlkID0gMDtcbmNvbnN0IHN1YnNjcmliZXJzID0gW107XG4vKipcbiAqIExvZ3Mgc29tZXRoaW5nXG4gKlxuICogQHBhcmFtIHR5cGUgYSBuYW1lc3BhY2VkIGlkZW50aWZpZXIgb2YgdGhlIGxvZyAoaXQgaXMgbm90IGEgbGV2ZWwgbGlrZSBcImRlYnVnXCIsIFwiZXJyb3JcIiBidXQgbW9yZSBsaWtlIFwiYXBkdS1pblwiLCBcImFwZHUtb3V0XCIsIGV0Yy4uLilcbiAqIEBwYXJhbSBtZXNzYWdlIGEgY2xlYXIgbWVzc2FnZSBvZiB0aGUgbG9nIGFzc29jaWF0ZWQgdG8gdGhlIHR5cGVcbiAqL1xuZXhwb3J0IGNvbnN0IGxvZyA9ICh0eXBlLCBtZXNzYWdlLCBkYXRhKSA9PiB7XG4gICAgY29uc3Qgb2JqID0ge1xuICAgICAgICB0eXBlLFxuICAgICAgICBpZDogU3RyaW5nKCsraWQpLFxuICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLFxuICAgIH07XG4gICAgaWYgKG1lc3NhZ2UpXG4gICAgICAgIG9iai5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICBpZiAoZGF0YSlcbiAgICAgICAgb2JqLmRhdGEgPSBkYXRhO1xuICAgIGRpc3BhdGNoKG9iaik7XG59O1xuLyoqXG4gKiBBIHNpbXBsZSB0cmFjZXIgZnVuY3Rpb24sIG9ubHkgZXhwYW5kaW5nIHRoZSBleGlzdGluZyBsb2cgZnVuY3Rpb25cbiAqXG4gKiBJdHMgZ29hbCBpcyB0byBjYXB0dXJlIG1vcmUgY29udGV4dCB0aGFuIGEgbG9nIGZ1bmN0aW9uLlxuICogVGhpcyBpcyBzaW1wbGUgZm9yIG5vdywgYnV0IGNhbiBiZSBpbXByb3ZlZCBsYXRlci5cbiAqXG4gKiBAcGFyYW0gY29udGV4dCBBbnl0aGluZyByZXByZXNlbnRpbmcgdGhlIGNvbnRleHQgd2hlcmUgdGhlIGxvZyBvY2N1cnJlZFxuICovXG5leHBvcnQgY29uc3QgdHJhY2UgPSAoeyB0eXBlLCBtZXNzYWdlLCBkYXRhLCBjb250ZXh0LCB9KSA9PiB7XG4gICAgY29uc3Qgb2JqID0ge1xuICAgICAgICB0eXBlLFxuICAgICAgICBpZDogU3RyaW5nKCsraWQpLFxuICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLFxuICAgIH07XG4gICAgaWYgKG1lc3NhZ2UpXG4gICAgICAgIG9iai5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICBpZiAoZGF0YSlcbiAgICAgICAgb2JqLmRhdGEgPSBkYXRhO1xuICAgIGlmIChjb250ZXh0KVxuICAgICAgICBvYmouY29udGV4dCA9IGNvbnRleHQ7XG4gICAgZGlzcGF0Y2gob2JqKTtcbn07XG4vKipcbiAqIEEgc2ltcGxlIHRyYWNlciBjbGFzcywgdGhhdCBjYW4gYmUgdXNlZCB0byBhdm9pZCByZXBldGl0aW9uIHdoZW4gdXNpbmcgdGhlIGB0cmFjZWAgZnVuY3Rpb25cbiAqXG4gKiBJdHMgZ29hbCBpcyB0byBjYXB0dXJlIG1vcmUgY29udGV4dCB0aGFuIGEgbG9nIGZ1bmN0aW9uLlxuICogVGhpcyBpcyBzaW1wbGUgZm9yIG5vdywgYnV0IGNhbiBiZSBpbXByb3ZlZCBsYXRlci5cbiAqXG4gKiBAcGFyYW0gdHlwZSBBIGdpdmVuIHR5cGUgKG5vdCBsZXZlbCkgZm9yIHRoZSBjdXJyZW50IGxvY2FsIHRyYWNlciAoXCJod1wiLCBcIndpdGhEZXZpY2VcIiwgZXRjLilcbiAqIEBwYXJhbSBjb250ZXh0IEFueXRoaW5nIHJlcHJlc2VudGluZyB0aGUgY29udGV4dCB3aGVyZSB0aGUgbG9nIG9jY3VycmVkXG4gKi9cbmV4cG9ydCBjbGFzcyBMb2NhbFRyYWNlciB7XG4gICAgdHlwZTtcbiAgICBjb250ZXh0O1xuICAgIGNvbnN0cnVjdG9yKHR5cGUsIGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICB9XG4gICAgdHJhY2UobWVzc2FnZSwgZGF0YSkge1xuICAgICAgICB0cmFjZSh7XG4gICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGUsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldENvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQ7XG4gICAgfVxuICAgIHNldENvbnRleHQoY29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbiAgICB1cGRhdGVDb250ZXh0KGNvbnRleHRUb0FkZCkge1xuICAgICAgICB0aGlzLmNvbnRleHQgPSB7IC4uLnRoaXMuY29udGV4dCwgLi4uY29udGV4dFRvQWRkIH07XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGU7XG4gICAgfVxuICAgIHNldFR5cGUodHlwZSkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIExvY2FsVHJhY2VyIHdpdGggYW4gdXBkYXRlZCBgdHlwZWBcbiAgICAgKlxuICAgICAqIEl0IGRvZXMgbm90IG11dGF0ZSB0aGUgY2FsbGluZyBpbnN0YW5jZSwgYnV0IHJldHVybnMgYSBuZXcgTG9jYWxUcmFjZXIsXG4gICAgICogZm9sbG93aW5nIGEgc2ltcGxlIGJ1aWxkZXIgcGF0dGVybi5cbiAgICAgKi9cbiAgICB3aXRoVHlwZSh0eXBlKSB7XG4gICAgICAgIHJldHVybiBuZXcgTG9jYWxUcmFjZXIodHlwZSwgdGhpcy5jb250ZXh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBMb2NhbFRyYWNlciB3aXRoIGEgbmV3IGBjb250ZXh0YFxuICAgICAqXG4gICAgICogSXQgZG9lcyBub3QgbXV0YXRlIHRoZSBjYWxsaW5nIGluc3RhbmNlLCBidXQgcmV0dXJucyBhIG5ldyBMb2NhbFRyYWNlcixcbiAgICAgKiBmb2xsb3dpbmcgYSBzaW1wbGUgYnVpbGRlciBwYXR0ZXJuLlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbnRleHQgQSBUcmFjZUNvbnRleHQsIHRoYXQgY2FuIHVuZGVmaW5lZCB0byByZXNldCB0aGUgY29udGV4dFxuICAgICAqL1xuICAgIHdpdGhDb250ZXh0KGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBMb2NhbFRyYWNlcih0aGlzLnR5cGUsIGNvbnRleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIExvY2FsVHJhY2VyIHdpdGggYW4gdXBkYXRlZCBgY29udGV4dGAsXG4gICAgICogb24gd2hpY2ggYW4gYWRkaXRpb25hbCBjb250ZXh0IGlzIG1lcmdlZCB3aXRoIHRoZSBleGlzdGluZyBvbmUuXG4gICAgICpcbiAgICAgKiBJdCBkb2VzIG5vdCBtdXRhdGUgdGhlIGNhbGxpbmcgaW5zdGFuY2UsIGJ1dCByZXR1cm5zIGEgbmV3IExvY2FsVHJhY2VyLFxuICAgICAqIGZvbGxvd2luZyBhIHNpbXBsZSBidWlsZGVyIHBhdHRlcm4uXG4gICAgICovXG4gICAgd2l0aFVwZGF0ZWRDb250ZXh0KGNvbnRleHRUb0FkZCkge1xuICAgICAgICByZXR1cm4gbmV3IExvY2FsVHJhY2VyKHRoaXMudHlwZSwgeyAuLi50aGlzLmNvbnRleHQsIC4uLmNvbnRleHRUb0FkZCB9KTtcbiAgICB9XG59XG4vKipcbiAqIEFkZHMgYSBzdWJzY3JpYmVycyB0byB0aGUgZW1pdHRlZCBsb2dzLlxuICpcbiAqIEBwYXJhbSBjYiB0aGF0IGlzIGNhbGxlZCBmb3IgZWFjaCBmdXR1cmUgbG9nKCkgd2l0aCB0aGUgTG9nIG9iamVjdFxuICogQHJldHVybiBhIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIGNhbGxlZCB0byB1bnN1YnNjcmliZSB0aGUgbGlzdGVuZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGxpc3RlbiA9IChjYikgPT4ge1xuICAgIHN1YnNjcmliZXJzLnB1c2goY2IpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGkgPSBzdWJzY3JpYmVycy5pbmRleE9mKGNiKTtcbiAgICAgICAgaWYgKGkgIT09IC0xKSB7XG4gICAgICAgICAgICAvLyBlcXVpdmFsZW50IG9mIHN1YnNjcmliZXJzLnNwbGljZShpLCAxKSAvLyBodHRwczovL3R3aXR0ZXIuY29tL1JpY2hfSGFycmlzL3N0YXR1cy8xMTI1ODUwMzkxMTU1OTY1OTUyXG4gICAgICAgICAgICBzdWJzY3JpYmVyc1tpXSA9IHN1YnNjcmliZXJzW3N1YnNjcmliZXJzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMucG9wKCk7XG4gICAgICAgIH1cbiAgICB9O1xufTtcbmZ1bmN0aW9uIGRpc3BhdGNoKGxvZykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Vic2NyaWJlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzW2ldKGxvZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHdpbmRvdy5fX2xlZGdlckxvZ3NMaXN0ZW4gPSBsaXN0ZW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\n");

/***/ })

};
;